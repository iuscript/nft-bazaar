type User @entity {
  id: ID!
  tokens: [Nft!] @derivedFrom(field: "holder")
}

type Nft @entity {
  id: ID!
  tokenURI: String
  createdAtTimestamp: BigInt!
  createdAtBlockNumber: BigInt!
  transactionHash: Bytes!
  creater: Bytes!
  holder: User!
  offer: Offer @derivedFrom(field: "tokenID")
  orderHistory: [Order!] @derivedFrom(field: "tokenID")
  bidHistory: [Bid!] @derivedFrom(field: "tokenID")
}

type Offer @entity {
  id: ID!
  isBid: Boolean!
  seller: Bytes!
  price: BigInt!
  tokenID: Nft!
  paymentToken: Bytes!
  endTime: BigInt!
  createdAtTimestamp: BigInt!
  createdAtBlockNumber: BigInt!
  transactionHash: Bytes!
  contract: Bytes!
}

type Order @entity {
  # tokenID + "-" + Timestamp
  id: ID!
  seller: Bytes!
  buyers: Bytes!
  tokenID: Nft!
  price: BigInt!
  paymentToken: Bytes!
  createdAtTimestamp: BigInt!
  createdAtBlockNumber: BigInt!
  transactionHash: Bytes!
}

type Bid @entity {
  # tokenID + "-" + Timestamp
  id: ID!
  tokenID: Nft!
  bidder: Bytes!
  value: BigInt!
  createdAtTimestamp: BigInt!
  createdAtBlockNumber: BigInt!
  transactionHash: Bytes!
}

type Market @entity {
  id: ID!
  txCount: BigInt!
  offersCount: BigInt!
  volumeETH: BigInt!
  volumeUSD: BigInt!
}

type DayData @entity {
  # timestamp / 86400
  id: ID!

  # date
  date: Int!

  txCount: BigInt!

  volumeETH: BigInt!
  volumeUSD: BigInt!
}
